if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
" Interesting plugins
" terryma/vim-multiple-cursors

Plug 'elmcast/elm-vim'

" https://github.com/gmarik/vundle#readme
Plug 'gmarik/Vundle.vim'

" https://github.com/bling/vim-airline
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" https://github.com/edkolev/tmuxline.vim
Plug 'edkolev/tmuxline.vim'

" reStructuredText in Vim
Plug 'Rykka/riv.vim'

" https://github.com/vim-scripts/greplace.vim
Plug 'vim-scripts/greplace.vim'

" https://github.com/vim-scripts/Vim-R-plugin
Plug 'vim-scripts/Vim-R-plugin'

" show a diff, whenever recovering a buffer
" https://github.com/chrisbra/Recover.vim#readme
Plug 'chrisbra/Recover.vim'

Plug 'xolox/vim-misc'
Plug 'xolox/vim-session'

" https://github.com/scrooloose/syntastic#readme
Plug 'scrooloose/syntastic'

Plug 'bronson/vim-trailing-whitespace'

" https://github.com/astashov/vim-ruby-debugger#readme
" Plug 'astashov/vim-ruby-debugger'
" let g:ruby_debugger_no_maps = 1                      " disable key bindings because they conflict with Command-T

" https://github.com/wincent/Command-T#readme
" Replace Command-T with ctrlp
" Plug 'wincent/Command-T'
" https://github.com/kien/ctrlp.vim/blob/master/readme.md#readme
" Plug 'kien/ctrlp.vim'
" http://ctrlpvim.github.io/ctrlp.vim/
Plug 'ctrlpvim/ctrlp.vim'

" vimscript for creating gists
" https://github.com/mattn/gist-vim/blob/master/README.mkd#readme
Plug 'mattn/webapi-vim'
Plug 'mattn/gist-vim'

" https://github.com/ervandew/supertab#readme
Plug 'ervandew/supertab'

" https://github.com/godlygeek/tabular#readme
Plug 'godlygeek/tabular'

" https://github.com/vadv/vim-chef
Plug 'vadv/vim-chef'

" https://github.com/depuracao/vim-rdoc#readme
Plug 'depuracao/vim-rdoc'

" https://github.com/thoughtbot/vim-rspec#readme
Plug 'thoughtbot/vim-rspec'

" https://github.com/garbas/vim-snipmate#readme
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'honza/vim-snippets'
" Plug 'scrooloose/snipmate-snippets'
Plug 'garbas/vim-snipmate'

" https://github.com/scrooloose/nerdtree#readme
Plug 'scrooloose/nerdtree'

" orgasmic commenting
" https://github.com/scrooloose/nerdcommenter#readme
Plug 'scrooloose/nerdcommenter'

" shows a git diff in the 'gutter' (sign column). It shows whether each line
" has been added, modified, and where lines have been removed. You can also
" stage and revert individual hunks
Plug 'airblade/vim-gitgutter'

Plug 'xolox/vim-easytags'

Plug 'elixir-lang/vim-elixir'

Plug 'timcharper/textile.vim'
Plug 'kchmck/vim-coffee-script'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-characterize'
Plug 'tpope/vim-cucumber'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-haml'
Plug 'tpope/vim-heroku'
Plug 'pangloss/vim-javascript'
Plug 'plasticboy/vim-markdown'
" Plug 'tpope/vim-markdown'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'ecomba/vim-ruby-refactoring'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-vividchalk'
"https://github.com/skalnik/vim-vroom
Plug 'skalnik/vim-vroom'
"git://github.com/tsaleh/taskpaper.vim"

" Plug 'tomtom/tcomment_vim'
"git://github.com/tsaleh/vim-tcomment"

Plug 'vim-scripts/tComment'

" run ag from vim, and shows the results in a split window
" :Ag [options] {pattern} [{directory}]
Plug 'rking/ag.vim'
" Plug 'mileszs/ack.vim'

Plug 'kana/vim-textobj-user'
Plug 'nelstrom/vim-textobj-rubyblock'

"Plug 'tsaleh/vim-matchit' " replaced with vim-sensible
Plug 'tsaleh/vim-shoulda'
"git://github.com/tsaleh/vim-tcomment"
Plug 'vim-ruby/vim-ruby'
Plug 'slim-template/vim-slim'
Plug 'vim-scripts/Gist.vim'
Plug 'vim-scripts/IndexedSearch'
Plug 'vim-scripts/jQuery'
Plug 'henrik/vim-indexed-search'
Plug 'chrisbra/NrrwRgn'
Plug 'hsitz/VimOrganizer'
Plug 'altercation/vim-colors-solarized'
Plug 'nanotech/jellybeans.vim'

Plug 'hdima/python-syntax'

call plug#end()
